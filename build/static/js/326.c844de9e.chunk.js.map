{"version":3,"file":"static/js/326.c844de9e.chunk.js","mappings":"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","sources":["components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  position: relative;\r\n  > div > div {\r\n    padding: 8rem 0 8rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    > div > div {\r\n      padding: 4rem 0 4rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const Content1 = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const Content2 = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  // button:last-child {\r\n  //   margin-left: 20px;\r\n  // }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { PngIcon } from \"../../../common/PngIcon\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  Content1,\r\n  Content2,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  ButtonWrapper\r\n} from \"./styles\";\r\n\r\nconst LeftContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  content1,\r\n  content2,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <LeftContentSection>\r\n      <Fade direction=\"left\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <Content>{t(content1)}</Content>\r\n              <Content>{t(content2)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => scrollTo(\"contact\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n              \r\n              <ServiceWrapper>\r\n                <Row justify=\"space-between\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          {item.smallIcon ? (\r\n                            <div style={{ height: '60px', width: \"60px\", display: \"flex\" }}>\r\n                              <PngIcon src={item.icon} width=\"32px\" height=\"32px\" />\r\n                              <PngIcon src={item.icon} width=\"32px\" height=\"32px\" style={{ position: \"absolute\", right: \"168px\" }}/>\r\n                            </div>\r\n                          ): <PngIcon src={item.icon} width=\"60px\" height=\"60px\" />}\r\n                          \r\n                          <MinTitle>{t(item.title)}</MinTitle>\r\n                          <MinPara>{t(item.content)}</MinPara>\r\n                          <MinPara>{t(item.content1)}</MinPara>\r\n                          <MinPara>{t(item.content2)}</MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 6rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  // button:last-child {\r\n  //   margin-left: 20px;\r\n  // }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  RightBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst RightBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <RightBlockContainer>\r\n      <Fade direction=\"right\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => scrollTo(\"career\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport { ContentBlockProps } from \"./types\";\r\n\r\nconst ContentBlock = (props: ContentBlockProps) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"names":["LeftContentSection","styled","Content","ContentWrapper","ServiceWrapper","MinTitle","MinPara","ButtonWrapper","withTranslation","icon","title","content","content1","content2","section","button","t","id","direction","justify","align","lg","md","sm","xs","SvgIcon","src","width","height","map","item","Button","color","fixedWidth","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","span","smallIcon","style","display","PngIcon","position","right","RightBlockContainer","props","type","RightContentBlock"],"sourceRoot":""}